#BlueJ class context
comment0.target=CollisionManager
comment0.text=\r\n\ Provides\ functions\ to\ check\ if\ an\ object\ of\ a\ given\ position\ and\ size\ is\ outside\ the\ bounds\ of\ the\ given\ aquarium\r\n\r\n\ @author\ Nye\ Blythe\r\n\ @version\ 1.0\r\n
comment1.params=aquariumSize
comment1.target=CollisionManager(DataStructures.Vector2)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ CollisionManager\r\n\r\n\ @param\ aquariumSize\ \ \ \ \ \ \ \ Size\ of\ the\ aquarium\ to\ check\ collisions\ against\r\n
comment2.params=pos\ size
comment2.target=DataStructures.Collision\ checkEdges(DataStructures.Vector2,\ DataStructures.Vector2)
comment2.text=\r\n\ METHOD\:\ Check\ the\ collision\ state\ of\ an\ object\ with\ the\ given\ position\ and\ size\r\n\r\n\ @param\ pos\ \ \ \ \ \ \ The\ position\ of\ the\ object\ being\ checked\r\n\ @param\ size\ \ \ \ \ \ The\ size\ of\ the\ object\ being\ checked\r\n\r\n\ @return\ A\ wrapper\ object\ containing\ all\ collision\ data\ from\ the\ check\r\n
comment3.params=pos
comment3.target=DataStructures.Collision\ checkEdges(DataStructures.Vector2)
comment3.text=\r\n\ METHOD\:\ Check\ the\ collision\ state\ of\ an\ object\ with\ the\ given\ position\r\n\r\n\ @param\ pos\ \ \ \ \ \ \ The\ position\ of\ the\ object\ being\ checked\r\n\r\n\ @return\ A\ wrapper\ object\ containing\ all\ collision\ data\ from\ the\ check\r\n
comment4.params=x\ width
comment4.target=int\ checkXEdges(double,\ double)
comment4.text=\r\n\ METHOD\:\ Check\ if\ an\ object\ at\ the\ given\ position\ with\ the\ given\ width\ passes\ either\ horizontal\ boundary\ of\ the\ aquarium\r\n\r\n\ @param\ x\ \ \ \ \ \ \ X\ position\ of\ the\ object\ to\ check\r\n\ @param\ width\ \ \ Width\ of\ the\ object\ to\ check\r\n\r\n\ @return\ An\ integer\ between\ -1\ and\ 1\ determining\ which\ edge,\ if\ any,\ the\ object\ is\ beyond\ (0\ indicates\ no\ boundary\ has\ been\ passed)\r\n
comment5.params=y\ height
comment5.target=int\ checkYEdges(double,\ double)
comment5.text=\r\n\ METHOD\:\ Check\ if\ an\ object\ at\ the\ given\ position\ with\ the\ given\ height\ passes\ either\ vertical\ boundary\ of\ the\ aquarium\r\n\r\n\ @param\ y\ \ \ \ \ \ \ \ \ Y\ position\ of\ the\ object\ to\ check\r\n\ @param\ height\ \ \ \ Height\ of\ the\ object\ to\ check\r\n\r\n\ @return\ An\ integer\ between\ -1\ and\ 1\ determining\ which\ edge,\ if\ any,\ the\ object\ is\ beyond\ (0\ indicates\ no\ boundary\ has\ been\ passed)\r\n
comment6.params=edge\ width
comment6.target=double\ clampX(int,\ double)
comment6.text=\r\n\ METHOD\:\ Calculate\ the\ absolute\ x\ position\ an\ object\ of\ the\ given\ width\ should\ be\ placed\ at\ when\ collided\ with\ the\ given\ horizontal\ edge\r\n\r\n\ @param\ edge\ \ \ \ \ \ \ \ Integer\ of\ either\ -1\ or\ 1,\ representing\ the\ edge\ that\ was\ hit\r\n\ @param\ width\ \ \ \ \ \ \ Width\ of\ the\ object\ being\ checked\r\n\r\n\ @return\ The\ position\ to\ clamp\ to\r\n
comment7.params=edge\ height
comment7.target=double\ clampY(int,\ double)
comment7.text=\r\n\ METHOD\:\ Calculate\ the\ absolute\ y\ position\ an\ object\ of\ the\ given\ width\ should\ be\ placed\ at\ when\ collided\ with\ the\ given\ vertical\ edge\r\n\r\n\ @param\ edge\ \ \ \ \ \ \ \ Integer\ of\ either\ -1\ or\ 1,\ representing\ the\ edge\ that\ was\ hit\r\n\ @param\ height\ \ \ \ \ \ Height\ of\ the\ object\ being\ checked\r\n\r\n\ @return\ The\ position\ to\ clamp\ to\r\n
numComments=8
